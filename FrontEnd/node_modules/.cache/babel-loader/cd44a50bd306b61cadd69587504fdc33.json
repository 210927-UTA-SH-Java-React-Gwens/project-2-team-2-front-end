{"ast":null,"code":"const initialState = [];\nexport const messageReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["E:/Revature Training/week 6/FrontEnd Module/UserPage/project1/src/Reducers/MessageReducer.ts"],"names":["initialState","messageReducer","state","action","type"],"mappings":"AAEA,MAAMA,YAAyB,GAAG,EAAlC;AASA,OAAO,MAAMC,cAAc,GAAG,YAAoD;AAAA,MAAnDC,KAAmD,uEAA/BF,YAA+B;AAAA,MAAjBG,MAAiB;;AAE9E,UAAOA,MAAM,CAACC,IAAd;AACI;AACI,aAAOF,KAAP;AAFR;AAKH,CAPM","sourcesContent":["import {IMessages} from '../Store/types' ;\r\n\r\nconst initialState: IMessages[] = [];\r\n\r\ntype Action = {\r\n\r\n    type:string,\r\n    payload:object\r\n\r\n};\r\n\r\nexport const messageReducer = (state:IMessages[] = initialState, action:Action) =>{\r\n\r\n    switch(action.type){\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}