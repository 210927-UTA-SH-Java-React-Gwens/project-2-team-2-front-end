{"ast":null,"code":"var _jsxFileName = \"E:\\\\Revature Training\\\\week 6\\\\FrontEnd Module\\\\UserPage\\\\project1\\\\src\\\\Components\\\\UserTest\\\\UserTest.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUser } from '../../Actions/UserActions';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GetsUser = () => {\n  _s();\n\n  //First we will pull in the application level state with useSelector\n  const appState = useSelector(state => state); //Create the dispatcher to dispatch actions\n\n  const dispatch = useDispatch(); //We will setup useHistory to naviate using JS\n\n  const history = useHistory(); //Set up our component level state, that other components don't need to know about\n\n  let [id, setId] = useState(1);\n  useEffect(() => {\n    console.log(appState);\n  }, [appState]); //We need a function to actually handle the login\n\n  const login = async () => {\n    console.log('This is previous to call');\n    await dispatch(getUser({\n      id\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    onClick: login,\n    children: \"Hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n};\n\n_s(GetsUser, \"ZXldq8AES4i7kk7knpw7eqk/lJY=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = GetsUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetsUser\");","map":{"version":3,"sources":["E:/Revature Training/week 6/FrontEnd Module/UserPage/project1/src/Components/UserTest/UserTest.tsx"],"names":["React","useState","useEffect","useDispatch","useSelector","getUser","useHistory","GetsUser","appState","state","dispatch","history","id","setId","console","log","login"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAAQC,UAAR,QAA+B,kBAA/B;;AAEA,OAAO,MAAMC,QAAsB,GAAG,MAAM;AAAA;;AAExC;AACA,QAAMC,QAAQ,GAAGJ,WAAW,CAAYK,KAAD,IAAWA,KAAtB,CAA5B,CAHwC,CAIxC;;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B,CALwC,CAOxC;;AACA,QAAMQ,OAAO,GAAGL,UAAU,EAA1B,CARwC,CAUxC;;AACA,MAAI,CAACM,EAAD,EAAKC,KAAL,IAAcZ,QAAQ,CAAC,CAAD,CAA1B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACH,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT,CAbwC,CAkBxC;;AACA,QAAMQ,KAAK,GAAG,YAAY;AACtBF,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,UAAML,QAAQ,CACVL,OAAO,CAAC;AAACO,MAAAA;AAAD,KAAD,CADG,CAAd;AAGH,GALD;;AAMA,sBAAO;AAAI,IAAA,OAAO,EAAEI,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CA1BM;;GAAMT,Q;UAGQH,W,EAEAD,W,EAGDG,U;;;KARPC,Q","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { getUser } from '../../Actions/UserActions';\r\nimport {useHistory, Link} from 'react-router-dom';\r\n\r\nexport const GetsUser:React.FC<any> = () => {\r\n\r\n    //First we will pull in the application level state with useSelector\r\n    const appState = useSelector<any, any>((state) => state);\r\n    //Create the dispatcher to dispatch actions\r\n    const dispatch = useDispatch();\r\n\r\n    //We will setup useHistory to naviate using JS\r\n    const history = useHistory();\r\n\r\n    //Set up our component level state, that other components don't need to know about\r\n    let [id, setId] = useState(1);\r\n\r\n    useEffect(() => {\r\n        console.log(appState);\r\n    }, [appState]);\r\n\r\n\r\n    //We need a function to actually handle the login\r\n    const login = async () => {\r\n        console.log('This is previous to call');\r\n        await dispatch(\r\n            getUser({id})\r\n        );\r\n    }\r\n    return <h1 onClick={login}>Hello</h1>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}